ggplot(data = plotdata, mapping = aes(x=exper, y=wage)) + geom_point(color = "#7FBF3F", alpha = 0.3, size = 3) +
geom_smooth(method = "lm", size = 0.2, se = FALSE)
# lm = linear model
# se = line shadow
# indicate sex using color
ggplot(data = plotdata, mapping = aes(x=exper, y=wage, color = sector)) + geom_point(alpha = 0.5, size = 3) +
geom_smooth(method = "lm", size = 0.2, se = FALSE)
# indicate sex using color
ggplot(data = plotdata, mapping = aes(x=exper, y=wage, color = sex)) + geom_point(alpha = 0.5, size = 3) +
geom_smooth(method = "lm", size = 0.2, se = FALSE) +
scale_x_continuous(breaks = seq(0, 60, 10)) +
scale_y_continuous(breaks = seq(0, 30, 5), labels = scale::dollar) +
scale_color_manual(values = c("red", "blue"))
# fla
ggplot(data = plotdata, mapping = aes(x=exper, y=wage, color = sex)) + geom_point(alpha = 0.5, size = 3) +
geom_smooth(method = "lm", size = 0.2, se = FALSE) +
scale_x_continuous(breaks = seq(0, 60, 10)) +
scale_y_continuous(breaks = seq(0, 30, 5), labels = scales::dollar) +
scale_color_manual(values = c("red", "blue")) +
facet_wrap(~sector)
# facet_wrap
ggplot(data = plotdata, mapping = aes(x=exper, y=wage, color = sex)) + geom_point(alpha = 0.5, size = 1) +
geom_smooth(method = "lm", size = 0.2, se = FALSE) +
scale_x_continuous(breaks = seq(0, 60, 10)) +
scale_y_continuous(breaks = seq(0, 30, 5), labels = scales::dollar) +
scale_color_manual(values = c("red", "blue")) +
facet_wrap(~sector)
# label
ggplot(data = plotdata, mapping = aes(x=exper, y=wage, color = sex)) + geom_point(alpha = 0.5, size = 1) +
geom_smooth(method = "lm", size = 0.2, se = FALSE) +
scale_x_continuous(breaks = seq(0, 60, 10)) +
scale_y_continuous(breaks = seq(0, 30, 5), labels = scales::dollar) +
scale_color_manual(values = c("red", "blue")) +
facet_wrap(~sector) +
labs(title = "Relationship"
, subtitle = "Current Poplations Survey"
, caption = "source: http://mosix-web.org"
, x = "Years of Experirence", y = "Hourly Wage", color = "Gender")
# label
ggplot(data = plotdata, mapping = aes(x=exper, y=wage, color = sex)) + geom_point(alpha = 0.5, size = 1) +
geom_smooth(method = "lm", size = 0.2, se = FALSE) +
scale_x_continuous(breaks = seq(0, 60, 10)) +
scale_y_continuous(breaks = seq(0, 30, 5), labels = scales::dollar) +
scale_color_manual(values = c("red", "blue")) +
facet_wrap(~sector) +
labs(title = "Relationship between wages and experience"
, subtitle = "Current Poplations Survey"
, caption = "source: http://mosix-web.org"
, x = "Years of Experirence", y = "Hourly Wage", color = "Gender")
, x = "Years of Experirence", y = "Hourly Wage", color = "Gender") +
theme_minimal()
# label
ggplot(data = plotdata, mapping = aes(x=exper, y=wage, color = sex)) + geom_point(alpha = 0.5, size = 1) +
geom_smooth(method = "lm", size = 0.2, se = FALSE) +
scale_x_continuous(breaks = seq(0, 60, 10)) +
scale_y_continuous(breaks = seq(0, 30, 5), labels = scales::dollar) +
scale_color_manual(values = c("red", "blue")) +
facet_wrap(~sector) +
labs(title = "Relationship between wages and experience"
, subtitle = "Current Poplations Survey"
, caption = "source: http://mosix-web.org"
, x = "Years of Experirence", y = "Hourly Wage", color = "Gender") +
theme_minimal()
, x = "Years of Experirence", y = "Hourly Wage", color = "Gender") +
theme_linedraw()
, x = "Years of Experirence", y = "Hourly Wage", color = "Gender") + theme_linedraw()
# label
ggplot(data = plotdata, mapping = aes(x=exper, y=wage, color = sex)) + geom_point(alpha = 0.5, size = 1) +
geom_smooth(method = "lm", size = 0.2, se = FALSE) +
scale_x_continuous(breaks = seq(0, 60, 10)) +
scale_y_continuous(breaks = seq(0, 30, 5), labels = scales::dollar) +
scale_color_manual(values = c("red", "blue")) +
facet_wrap(~sector) +
labs(title = "Relationship between wages and experience"
, subtitle = "Current Poplations Survey"
, caption = "source: http://mosix-web.org"
, x = "Years of Experirence", y = "Hourly Wage", color = "Gender") +
theme_linedraw()
# Theme
ggplot(data = plotdata, mapping = aes(x=exper, y=wage, color = sex)) + geom_point(alpha = 0.5, size = 1) +
geom_smooth(method = "lm", size = 0.2, se = FALSE) +
scale_x_continuous(breaks = seq(0, 60, 10)) +
scale_y_continuous(breaks = seq(0, 30, 5), labels = scales::dollar) +
scale_color_manual(values = c("red", "blue")) +
facet_wrap(~sector) +
labs(title = "Relationship between wages and experience"
, subtitle = "Current Poplations Survey"
, caption = "source: http://mosix-web.org"
, x = "Years of Experirence", y = "Hourly Wage", color = "Gender") +
theme_light()
# Theme
ggplot(data = plotdata, mapping = aes(x=exper, y=wage, color = sex)) + geom_point(alpha = 0.5, size = 1) +
geom_smooth(method = "lm", size = 0.2, se = FALSE) +
scale_x_continuous(breaks = seq(0, 60, 10)) +
scale_y_continuous(breaks = seq(0, 30, 5), labels = scales::dollar) +
scale_color_manual(values = c("red", "blue")) +
facet_wrap(~sector) +
labs(title = "Relationship between wages and experience"
, subtitle = "Current Poplations Survey"
, caption = "source: http://mosix-web.org"
, x = "Years of Experirence", y = "Hourly Wage", color = "Gender") +
theme_light()
# plot the distribution of race
ggplot(Marriage, aes(x=race)) +
geom_bar()
# Barchart
data(Merriage, package = "mosaicData")
# plot the distribution of race
ggplot(Marriage, aes(x=race)) +
geom_bar()
# Barchart
data(Marriage, package = "mosaicData")
# Barchart
data(Marriage, package = "mosaicData")
# plot the distribution of race
ggplot(Marriage, aes(x=race)) +
geom_bar()
View(Marriage)
# plot the distribution of race
ggplot(Marriage, aes(y = race)) +
geom_bar()
# plot the distribution of race
ggplot(Marriage, aes(x = race)) +
geom_bar()
,colours = "black") +
labs(title = "Test"
# plot the distribution of race with colours and label
ggplot(Marriage, aes(x = race)) +
geom_bar(fill = "cornflowerblue"
,colours = "black") +
labs(title = "Test"
,x = "Race"
,y = "Total")
,color = "black") +
labs(title = "Test"
ggplot(Marriage, aes(x = race)) +
geom_bar(fill = "cornflowerblue"
,color = "black") +
labs(title = "Test"
,x = "Race"
,y = "Total")
# plot the distribution of race with colours and label
ggplot(Marriage, aes(x = race)) +
geom_bar(fill = "cornflowerblue", color = "black") +
labs(title = "Test"
,x = "Race"
,y = "Total")
# plot the distribution of race with colours and label
ggplot(Marriage, aes(x = race)) +
geom_bar(fill = "cornflowerblue", color = "black") +
labs(title = "Test" ,x = "Race" ,y = "Frequency")
# plot the distribution of race with colours and label
ggplot(Marriage, aes(x = race)) +
geom_bar(fill = "cornflowerblue",alpha = 0.2, color = "black") +
labs(title = "Test" ,x = "Race" ,y = "Frequency")
# plot the distribution of race with colours and label
ggplot(Marriage, aes(x = race)) +
geom_bar(fill = "cornflowerblue",alpha = 0.8 , color = "black") +
labs(title = "Test" ,x = "Race" ,y = "Frequency")
# plot the distribution of race with colours and label
ggplot(Marriage, aes(x = race)) +
geom_bar(fill = "cornflowerblue",alpha = 0.8 , color = "black" ,alpha = 0.2 ) +
labs(title = "Test" ,x = "Race" ,y = "Frequency")
# graph
library(ggplot2)
library(dplyr)
data(CPS85, package = "mosaicData")
ggplot(data = CPS85,mapping = aes(x = exper, y = wage))
# add points
ggplot(data = CPS85,mapping = aes(x = exper, y = wage)) + geom_point()
# delete outlier
plotdata <- filter(CPS85, wage < 40)
# redraw scatterplot
ggplot(data = plotdata, mapping = aes(x=exper, y=wage)) + geom_point(color = "#7FBF3F", alpha = 0.3, size = 3) +
geom_smooth(method = "lm", size = 0.2, se = FALSE)
# lm = linear model
# se = line shadow
# indicate sex using color
ggplot(data = plotdata, mapping = aes(x=exper, y=wage, color = sector)) + geom_point(alpha = 0.5, size = 3) +
geom_smooth(method = "lm", size = 0.2, se = FALSE)
# indicate sex using color
ggplot(data = plotdata, mapping = aes(x=exper, y=wage, color = sex)) + geom_point(alpha = 0.5, size = 3) +
geom_smooth(method = "lm", size = 0.2, se = FALSE) +
scale_x_continuous(breaks = seq(0, 60, 10)) +
scale_y_continuous(breaks = seq(0, 30, 5), labels = scale::dollar) +
scale_color_manual(values = c("red", "blue"))
# facet_wrap | group
ggplot(data = plotdata, mapping = aes(x=exper, y=wage, color = sex)) + geom_point(alpha = 0.5, size = 1) +
geom_smooth(method = "lm", size = 0.2, se = FALSE) +
scale_x_continuous(breaks = seq(0, 60, 10)) +
scale_y_continuous(breaks = seq(0, 30, 5), labels = scales::dollar) +
scale_color_manual(values = c("red", "blue")) +
facet_wrap(~sector)
# label
ggplot(data = plotdata, mapping = aes(x=exper, y=wage, color = sex)) + geom_point(alpha = 0.5, size = 1) +
geom_smooth(method = "lm", size = 0.2, se = FALSE) +
scale_x_continuous(breaks = seq(0, 60, 10)) +
scale_y_continuous(breaks = seq(0, 30, 5), labels = scales::dollar) +
scale_color_manual(values = c("red", "blue")) +
facet_wrap(~sector) +
labs(title = "Relationship between wages and experience"
, subtitle = "Current Poplations Survey"
, caption = "source: http://mosix-web.org"
, x = "Years of Experirence", y = "Hourly Wage", color = "Gender")
# Theme
ggplot(data = plotdata, mapping = aes(x=exper, y=wage, color = sex)) + geom_point(alpha = 0.5, size = 1) +
geom_smooth(method = "lm", size = 0.2, se = FALSE) +
scale_x_continuous(breaks = seq(0, 60, 10)) +
scale_y_continuous(breaks = seq(0, 30, 5), labels = scales::dollar) +
scale_color_manual(values = c("red", "blue")) +
facet_wrap(~sector) +
labs(title = "Relationship between wages and experience"
, subtitle = "Current Poplations Survey"
, caption = "source: http://mosix-web.org"
, x = "Years of Experirence", y = "Hourly Wage", color = "Gender") +
theme_light()
# Barchart
data(Marriage, package = "mosaicData")
# plot the distribution of race
ggplot(Marriage, aes(x = race)) +
geom_bar()
# plot the distribution of race with colours and label
ggplot(Marriage, aes(x = race)) +
geom_bar(fill = "cornflowerblue",alpha = 0.8 , color = "black" ,alpha = 0.2 ) +
labs(title = "Test" ,x = "Race" ,y = "Frequency")
# plot the distribution of race with colours and label
ggplot(Marriage, aes(x = race)) +
geom_bar(fill = "cornflowerblue",alpha = 0.8 , color = "red" ) +
labs(title = "Test" ,x = "Race" ,y = "Frequency")
# plot the distribution of race with colours and label
ggplot(Marriage, aes(x = race)) +
geom_bar(fill = "cornflowerblue",alpha = 0.8 , color = "yellow" ) +
labs(title = "Test" ,x = "Race" ,y = "Frequency")
# plot the distribution of race with colours and label
ggplot(Marriage, aes(x = race)) +
geom_bar(fill = "cornflowerblue",alpha = 0.8 , color = "yellow" ) +
labs(title = "Test" ,x = "เชื้อชาติ" ,y = "Frequency")
newdata <- group_by(Marriage, race) %>%
summarise(percentage = count()/sum(count()))
newdata <- group_by(Marriage, race) %>%
summarise(percentage = count()/sum(count()))
# graph
library(ggplot2)
library(dplyr)
library(tidyr)
data(CPS85, package = "mosaicData")
ggplot(data = CPS85,mapping = aes(x = exper, y = wage))
# add points
ggplot(data = CPS85,mapping = aes(x = exper, y = wage)) + geom_point()
# delete outlier
plotdata <- filter(CPS85, wage < 40)
# redraw scatterplot
ggplot(data = plotdata, mapping = aes(x=exper, y=wage)) + geom_point(color = "#7FBF3F", alpha = 0.3, size = 3) +
geom_smooth(method = "lm", size = 0.2, se = FALSE)
# lm = linear model
# se = line shadow
# indicate sex using color
ggplot(data = plotdata, mapping = aes(x=exper, y=wage, color = sector)) + geom_point(alpha = 0.5, size = 3) +
geom_smooth(method = "lm", size = 0.2, se = FALSE)
# indicate sex using color
ggplot(data = plotdata, mapping = aes(x=exper, y=wage, color = sex)) + geom_point(alpha = 0.5, size = 3) +
geom_smooth(method = "lm", size = 0.2, se = FALSE) +
scale_x_continuous(breaks = seq(0, 60, 10)) +
scale_y_continuous(breaks = seq(0, 30, 5), labels = scale::dollar) +
scale_color_manual(values = c("red", "blue"))
# facet_wrap | group
ggplot(data = plotdata, mapping = aes(x=exper, y=wage, color = sex)) + geom_point(alpha = 0.5, size = 1) +
geom_smooth(method = "lm", size = 0.2, se = FALSE) +
scale_x_continuous(breaks = seq(0, 60, 10)) +
scale_y_continuous(breaks = seq(0, 30, 5), labels = scales::dollar) +
scale_color_manual(values = c("red", "blue")) +
facet_wrap(~sector)
# label
ggplot(data = plotdata, mapping = aes(x=exper, y=wage, color = sex)) + geom_point(alpha = 0.5, size = 1) +
geom_smooth(method = "lm", size = 0.2, se = FALSE) +
scale_x_continuous(breaks = seq(0, 60, 10)) +
scale_y_continuous(breaks = seq(0, 30, 5), labels = scales::dollar) +
scale_color_manual(values = c("red", "blue")) +
facet_wrap(~sector) +
labs(title = "Relationship between wages and experience"
, subtitle = "Current Poplations Survey"
, caption = "source: http://mosix-web.org"
, x = "Years of Experirence", y = "Hourly Wage", color = "Gender")
# Theme
ggplot(data = plotdata, mapping = aes(x=exper, y=wage, color = sex)) + geom_point(alpha = 0.5, size = 1) +
geom_smooth(method = "lm", size = 0.2, se = FALSE) +
scale_x_continuous(breaks = seq(0, 60, 10)) +
scale_y_continuous(breaks = seq(0, 30, 5), labels = scales::dollar) +
scale_color_manual(values = c("red", "blue")) +
facet_wrap(~sector) +
labs(title = "Relationship between wages and experience"
, subtitle = "Current Poplations Survey"
, caption = "source: http://mosix-web.org"
, x = "Years of Experirence", y = "Hourly Wage", color = "Gender") +
theme_light()
# Barchart
data(Marriage, package = "mosaicData")
# plot the distribution of race
ggplot(Marriage, aes(x = race)) +
geom_bar()
# plot the distribution of race with colours and label
ggplot(Marriage, aes(x = race)) +
geom_bar(fill = "cornflowerblue",alpha = 0.8 , color = "yellow" ) +
labs(title = "Test" ,x = "เชื้อชาติ" ,y = "Frequency")
newdata <- group_by(Marriage, race) %>%
summarise(percentage = count()/sum(count()))
count()
newdata <- group_by(Marriage, race) %>% summarise(percentage = count(race)/sum(count(race)))
newdata <- group_by(Marriage, race) %>% count() %>% mutate(percentage = n/sum(n))
View(newdata)
newdata <- group_by(Marriage, race) %>% n <-count() %>% mutate(percentage = n/sum(n))
newdata <- group_by(Marriage, race) %>% n <-count() %>% mutate(percentage = n/sum(n))
newdata <- group_by(Marriage, race) %>% n <-count(race) %>% mutate(percentage = n/sum(n))
newdata <- race <- group_by(Marriage, race) %>% n <-count(race) %>% mutate(percentage = n/sum(n))
newdata <- race <- group_by(Marriage, race) %>% n <-count(race) %>% mutate(percentage = n/sum(n))
ggplot(Marriage, aes(x = race, y = ..count.. / sum(..count..))) +
geom_bar(fill = "cornflowerblue",alpha = 0.8 , color = "yellow" ) +
labs(title = "Test" ,x = "เชื้อชาติ" ,y = "Frequency")
ggplot(Marriage, aes(x = race, y = ..count.. / sum(..count..))) +
geom_bar(fill = "cornflowerblue",alpha = 0.8 , color = "ye.llow" ) +
labs(title = "Test" ,x = "เชื้อชาติ" ,y = "Frequency")
ggplot(Marriage, aes(x = race, y = ..count.. / sum(..count..))) +
geom_bar(fill = "cornflowerblue",alpha = 0.8 , color = "yellow" ) +
labs(title = "Test" ,x = "เชื้อชาติ" ,y = "Frequency")
ggplot(Marriage, aes(x = race, y = ..count.. / sum(..count..))) +
geom_bar(fill = "cornflowerblue",alpha = 0.8 , color = "yellow" ) +
labs(title = "Test" ,x = "Race" ,y = "Percent")
ggplot(Marriage, aes(x = race, y = ..count.. / sum(..count..))) +
geom_bar(fill = "cornflowerblue",alpha = 0.8 , color = "yellow" ) +
labs(title = "Test" ,x = "Race" ,y = "Percent")
scale_y_continuous(labels = scales::percent())
ggplot(Marriage, aes(x = race, y = ..count.. / sum(..count..))) +
geom_bar(fill = "cornflowerblue",alpha = 0.8 , color = "yellow" ) +
labs(title = "Test" ,x = "Race" ,y = "Percent")
scale_y_continuous(labels = scales::percent)
ggplot(Marriage, aes(x = race, y = ..count.. / sum(..count..))) +
geom_bar(fill = "cornflowerblue",alpha = 0.8 , color = "yellow" ) +
labs(title = "Test" ,x = "Race" ,y = "Percent")
scale_y_continuous(labels = scales::percent)
ggplot(Marriage, aes(x = race, y = ..count.. / sum(..count..))) +
geom_bar(fill = "cornflowerblue",alpha = 0.8 , color = "yellow" ) +
labs(title = "Test" ,x = "Race" ,y = "Percent") +
scale_y_continuous(labels = scales::percent)
# Sorting
plotdata <- Marriage %.% count(race)
# Sorting
plotdata <- Marriage %>% count(race)
View(plotdata)
ggplot(plotdata, aes(x = reorder(race, n), y = n)) +
geom_bar(fill = "cornflowerblue",alpha = 0.8 , color = "yellow" ) +
labs(title = "Test" ,x = "Race" ,y = "Percent") +
scale_y_continuous(labels = scales::percent)
ggplot(plotdata, aes(x = reorder(race, n), y = n)) +
geom_bar(fill = "cornflowerblue",alpha = 0.8 , color = "yellow" ) +
labs(title = "Test" ,x = "Race" ,y = "Percent")
plotdata <- Marriage %>% count(race)
ggplot(plotdata, aes(x = reorder(race, n), y = n)) +
geom_bar(fill = "cornflowerblue",alpha = 0.8 , color = "yellow" ) +
labs(title = "Test" ,x = "Race" ,y = "Percent")
plotdata <- Marriage %>% count(race)
ggplot(plotdata, aes(x = reorder(race, n), y = n)) +
geom_bar(stat = "identity", fill = "cornflowerblue",alpha = 0.8 , color = "yellow" ) +
labs(title = "Test" ,x = "Race" ,y = "Percent")
ggplot(plotdata, aes(x = reorder(n, race), y = n)) +
geom_bar(stat = "identity", fill = "cornflowerblue",alpha = 0.8 , color = "yellow" ) +
labs(title = "Test" ,x = "Race" ,y = "Percent")
ggplot(plotdata, aes(x = reorder(race, n), y = n)) +
geom_bar(stat = "identity", fill = "cornflowerblue",alpha = 0.8 , color = "yellow" ) +
labs(title = "Test" ,x = "Race" ,y = "Percent")
ggplot(plotdata, aes(x = reorder(race, n), y = n)) +
geom_bar(stat = "identity", fill = "cornflowerblue",alpha = 0.8 , color = "yellow" ) +
labs(title = "Test" ,x = "Race" ,y = "Percent")
ggplot(plotdata, aes(x = reorder(race, n), y = n)) +
geom_bar(stat = "identity", fill = "red",alpha = 0.8 , color = "yellow" ) +
labs(title = "Test" ,x = "Race" ,y = "Percent")
ggplot(plotdata, aes(x = reorder(race, n), y = n)) +
geom_bar(stat = "identity", fill = "red",alpha = 0.8 , color = "yellow" ) +
labs(title = "Test" ,x = "Race" ,y = "Percent")
# big to small
ggplot(plotdata, aes(x = reorder(race, -n), y = n)) +
geom_bar(stat = "identity", fill = "red",alpha = 0.8 , color = "yellow" ) +
labs(title = "Test" ,x = "Race" ,y = "Percent")
# calculate
ggplot(plotdata, aes(x = reorder(race, n), y = n)) +
geom_bar(fill = "red",alpha = 0.8 , color = "yellow" ) +
labs(title = "Test" ,x = "Race" ,y = "Percent")
# stat = "identity" = no calculate
# calculate
ggplot(plotdata, aes(x = reorder(race, n), y = n)) +
geom_bar(fill = "red",alpha = 0.8 , color = "yellow" ) +
labs(title = "Test" ,x = "Race" ,y = "Percent")
# big to small
ggplot(plotdata, aes(x = reorder(race, -n), y = n)) +
geom_bar(stat = "identity", fill = "red",alpha = 0.8 , color = "yellow" ) +
labs(title = "Test" ,x = "Race" ,y = "Percent")
newdata <- group_by(Marriage, race) %>% count() %>% mutate(percentage = n/sum(newData$n) * 100)
newdata <- group_by(Marriage, race) %>% count() %>% mutate(percentage = n/sum(newdata$n) * 100)
View(newdata)
View(Marriage)
# officialTitle
officialTitleData <- group_by(Marriage, officialTitle) %>% count() %>% mutate(percentage = n/sum(officialTitleData$n) * 100)
# officialTitle
officialTitleData <- group_by(Marriage, officialTitle) %>% count() %>% mutate(percentage = n/sum(officialTitleData$n) * 100)
# officialTitle
officialTitleData <- group_by(Marriage, officialTitle) %>% count() %>% mutate(percentage = n/sum(officialTitleData$n) * 100)
# officialTitle
officialTitleData <- group_by(Marriage, officialTitle) %>% count() %>% mutate(percentage = n/sum(officialTitleData$n) * 100)
plotdataOfficialTitle <- Marriage %>% count(officialTitle)
View(plotdataOfficialTitle)
plotdataOfficialTitle <- Marriage %>% count(officialTitle)
ggplot(plotdata, aes(x = reorder(officialTitle, n), y = n)) +
geom_bar(stat = "identity", fill = "red",alpha = 0.8 , color = "yellow" ) +
labs(title = "Test" ,x = "Race" ,y = "Percent")
plotdataOfficialTitle <- Marriage %>% count(officialTitle)
ggplot(plotdataOfficialTitle, aes(x = reorder(officialTitle, n), y = n)) +
geom_bar(stat = "identity", fill = "red",alpha = 0.8 , color = "yellow" ) +
labs(title = "Test" ,x = "Race" ,y = "Percent")
# officialTitle
officialTitleData <- group_by(Marriage, officialTitle) %>% count() %>% mutate(percentage = n/sum(officialTitleData$n) * 100)
# officialTitle
officialTitleData <- group_by(Marriage, officialTitle) %>% count() %>% mutate(percentage = n/sum(officialTitleData$n) * 100)
# Race
newdata <- group_by(Marriage, race) %>% count() %>% mutate(percentage = n/sum(newdata$n) * 100)
View(plotdata)
# officialTitle
officialTitleData <- group_by(Marriage, officialTitle) %>% count() %>% mutate(percentage = n/sum(officialTitleData$n) * 100)
officialTitle
# officialTitle
officialTitleData <- group_by(Marriage, officialTitle) %>% count() %>% mutate(percentage = n/sum(officialTitleData$n) * 100)
# officialTitle
officialTitleData <- group_by(Marriage, officialTitle) %>% count() %>% mutate(percentage = n/sum(officialTitleData$n) * 100)
plotdataOfficialTitle <- Marriage %>% count(officialTitle)
ggplot(plotdataOfficialTitle, aes(x = reorder(officialTitle, n), y = n)) +
geom_bar(stat = "identity", fill = "red",alpha = 0.8 , color = "yellow" ) +
labs(title = "officialTitle" ,x = "Race" ,y = "Percentage") +
scale_y_continuous(labels = scales::percent)
View(plotdataOfficialTitle)
# officialTitle
officialTitleData <- group_by(Marriage, officialTitle) %>% count() %>% mutate(percentage = n/sum(officialTitleData$n) * 100)
plotdataOfficialTitle <- Marriage %>% count(officialTitle)
ggplot(plotdataOfficialTitle, aes(x = reorder(officialTitle, -n), y = n)) +
geom_bar(stat = "identity", fill = "red",alpha = 0.8 , color = "yellow" ) +
labs(title = "officialTitle" ,x = "officialTitle" ,y = "Percentage") +
scale_y_continuous(labels = scales::percent)
ggplot(plotdataOfficialTitle, aes(x = reorder(officialTitle, -n), y = n)) +
geom_bar(stat = "identity", fill = "red",alpha = 0.8 , color = "yellow" ) +
labs(title = "officialTitle" ,x = "officialTitle" ,y = "Percentage") + geom_text(aes(label = n), vjust=-0.5)+
scale_y_continuous(labels = scales::percent)
ggplot(plotdataOfficialTitle, aes(x = reorder(officialTitle, -n), y = n)) +
geom_bar( fill = "red",alpha = 0.8 , color = "yellow" ) +
labs(title = "officialTitle" ,x = "officialTitle" ,y = "Percentage") + geom_text(aes(label = n), vjust=-0.5)+
scale_y_continuous(labels = scales::percent)
officialTitleData <- group_by(Marriage, officialTitle) %>% count() %>% mutate(percentage = n/sum(officialTitleData$n) * 100)
plotdataOfficialTitle <- Marriage %>% count(officialTitle)
ggplot(plotdataOfficialTitle, aes(x = reorder(officialTitle, -n), y = n)) +
geom_bar(stat = "identity", fill = "red",alpha = 0.8 , color = "yellow" ) +
labs(title = "officialTitle" ,x = "officialTitl
newdata <- group_by(Marriage, race) %>% count() %>% mutate(percentage = n/sum(newdata$n) * 100)
# officialTitle
officialTitleData <- group_by(Marriage, officialTitle) %>% count() %>% mutate(percentage = n/sum(officialTitleData$n) * 100)
plotdataOfficialTitle <- Marriage %>% count(officialTitle)
ggplot(plotdataOfficialTitle, aes(x = reorder(officialTitle, -n), y = n)) +
geom_bar(stat = "identity", fill = "red",alpha = 0.8 , color = "yellow" ) +
labs(title = "officialTitle" ,x = "officialTitle" ,y = "Percentage") + geom_text(aes(label = n), vjust=-0.5)+
scale_y_continuous(labels = scales::percent)
# officialTitle
officialTitleData <- group_by(Marriage, officialTitle) %>% count() %>% mutate(percentage = n/sum(officialTitleData$n) * 100)
plotdataOfficialTitle <- Marriage %>% count(officialTitle)
ggplot(plotdataOfficialTitle, aes(x = reorder(officialTitle, -n), y = n)) +
geom_bar(stat = "identity", fill = "red",alpha = 0.8 , color = "yellow" ) +
labs(title = "officialTitle" ,x = "officialTitle" ,y = "Percentage") + geom_text(aes(label = n), vjust=-0.5)+
scale_y_continuous(labels = scales::percent)
# officialTitle
officialTitleData <- group_by(Marriage, officialTitle) %>% count() %>% mutate(percentage = n/sum(officialTitleData$n) * 100)
plotdataOfficialTitle <- Marriage %>% count(officialTitle)
ggplot(plotdataOfficialTitle, aes(x = reorder(officialTitle, -n), y = n)) +
geom_bar(stat = "identity", fill = c("red","blue","green", "yellow","#7FBF3F","#BF7F3F","#7F3FBF","#3F3FBF","#3F7FBF"),alpha = 0.8 , color = "yellow" ) +
labs(title = "officialTitle" ,x = "officialTitle" ,y = "Percentage") + geom_text(aes(label = n), vjust=-0.5)+
scale_y_continuous(labels = scales::percent)
# officialTitle
officialTitleData <- group_by(Marriage, officialTitle) %>% count() %>% mutate(percentage = n/sum(officialTitleData$n) * 100)
# officialTitle
officialTitleData <- group_by(Marriage, officialTitle) %>% count() %>% mutate(percentage = n/sum(officialTitleData$n) * 100)
# officialTitle
officialTitleData <- group_by(Marriage, officialTitle) %>% count() %>% mutate(percentage = n/sum(n) * 100)
View(officialTitleData)
# officialTitle
officialTitleData <- group_by(Marriage, officialTitle) %>% count() %>% mutate(percentage = n/sum(officialTitleData$n) * 100)
ggplot(plotdataOfficialTitle, aes(x = reorder(officialTitle, -n), y = officialTitleData$percentage)) +
geom_bar(stat = "identity", fill = c("red","blue","green", "yellow","#7FBF3F","#BF7F3F","#7F3FBF","#3F3FBF","#3F7FBF"),alpha = 0.8 , color = "yellow" ) +
labs(title = "officialTitle" ,x = "officialTitle" ,y = "Percentage") + geom_text(aes(label = n), vjust=-0.5)+
scale_y_continuous(labels = scales::percent)
# officialTitle
officialTitleData <- group_by(Marriage, officialTitle) %>% count() %>% mutate(percentage = n/sum(officialTitleData$n))
plotdataOfficialTitle <- Marriage %>% count(officialTitle)
ggplot(plotdataOfficialTitle, aes(x = reorder(officialTitle, -n), y = officialTitleData$percentage)) +
geom_bar(stat = "identity", fill = c("red","blue","green", "yellow","#7FBF3F","#BF7F3F","#7F3FBF","#3F3FBF","#3F7FBF"),alpha = 0.8 , color = "yellow" ) +
labs(title = "officialTitle" ,x = "officialTitle" ,y = "Percentage") + geom_text(aes(label = n), vjust=-0.5)+
scale_y_continuous(labels = scales::percent)
ggplot(plotdataOfficialTitle, aes(x = reorder(officialTitle, -n), y = officialTitleData$percentage)) +
geom_bar(stat = "identity", fill = c("red","blue","green", "yellow","#7FBF3F","#BF7F3F","#7F3FBF","#3F3FBF","#3F7FBF"), alpha = 0.8 , color = "blue" ) +
labs(title = "officialTitle" ,x = "officialTitle" ,y = "Percentage") + geom_text(aes(label = n), vjust=-0.5)+
scale_y_continuous(labels = scales::percent)
# officialTitle
officialTitleData <- group_by(Marriage, officialTitle) %>% count() %>% mutate(percentage = n/sum(officialTitleData$n))
plotdataOfficialTitle <- Marriage %>% count(officialTitle)
ggplot(plotdataOfficialTitle, aes(x = reorder(officialTitle, -n), y = officialTitleData$percentage)) +
geom_bar(stat = "identity", fill = c("#3F7FBF","#3F3FBF","#BF3FBF", "yellow","#7FBF3F","#BF7F3F","#7F3FBF","#3F3FBF","#3F7FBF"), alpha = 0.8 , color = "blue" ) +
labs(title = "officialTitle" ,x = "officialTitle" ,y = "Percentage") + geom_text(aes(label = n), vjust=-0.5)+
scale_y_continuous(labels = scales::percent)
, x = "Years of Experirence", y = "Hourly Wage", color = "Gender") +
theme_light()
